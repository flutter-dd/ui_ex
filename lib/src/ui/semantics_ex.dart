part of ui_ex;

extension SemanticsEx on Widget? {
  /// Semantics
  Semantics semantics({
    Key? key,
    bool container = false,
    bool explicitChildNodes = false,
    bool excludeSemantics = false,
    bool? enabled,
    bool? checked,
    bool? selected,
    bool? toggled,
    bool? button,
    bool? slider,
    bool? keyboardKey,
    bool? link,
    bool? header,
    bool? textField,
    bool? readOnly,
    bool? focusable,
    bool? focused,
    bool? inMutuallyExclusiveGroup,
    bool? obscured,
    bool? multiline,
    bool? scopesRoute,
    bool? namesRoute,
    bool? hidden,
    bool? image,
    bool? liveRegion,
    int? maxValueLength,
    int? currentValueLength,
    String? label,
    String? value,
    String? increasedValue,
    String? decreasedValue,
    String? hint,
    String? onTapHint,
    String? onLongPressHint,
    TextDirection? textDirection,
    SemanticsSortKey? sortKey,
    SemanticsTag? tagForChildren,
    void Function()? onTap,
    void Function()? onLongPress,
    void Function()? onScrollLeft,
    void Function()? onScrollRight,
    void Function()? onScrollUp,
    void Function()? onScrollDown,
    void Function()? onIncrease,
    void Function()? onDecrease,
    void Function()? onCopy,
    void Function()? onCut,
    void Function()? onPaste,
    void Function()? onDismiss,
    void Function(bool)? onMoveCursorForwardByCharacter,
    void Function(bool)? onMoveCursorBackwardByCharacter,
    void Function(TextSelection)? onSetSelection,
    void Function(String)? onSetText,
    void Function()? onDidGainAccessibilityFocus,
    void Function()? onDidLoseAccessibilityFocus,
    Map<CustomSemanticsAction, void Function()>? customSemanticsActions,
  }) =>
      Semantics(
        child: this,
        container: container,
        explicitChildNodes: explicitChildNodes,
        excludeSemantics: excludeSemantics,
        enabled: enabled,
        checked: checked,
        selected: selected,
        toggled: toggled,
        button: button,
        slider: slider,
        keyboardKey: keyboardKey,
        link: link,
        header: header,
        textField: textField,
        readOnly: readOnly,
        focusable: focusable,
        focused: focused,
        inMutuallyExclusiveGroup: inMutuallyExclusiveGroup,
        obscured: obscured,
        multiline: multiline,
        scopesRoute: scopesRoute,
        namesRoute: namesRoute,
        hidden: hidden,
        image: image,
        liveRegion: liveRegion,
        maxValueLength: maxValueLength,
        currentValueLength: currentValueLength,
        label: label,
        value: value,
        increasedValue: increasedValue,
        decreasedValue: decreasedValue,
        hint: hint,
        onTapHint: onTapHint,
        onLongPressHint: onLongPressHint,
        textDirection: textDirection,
        sortKey: sortKey,
        tagForChildren: tagForChildren,
        onTap: onTap,
        onLongPress: onLongPress,
        onScrollLeft: onScrollLeft,
        onScrollRight: onScrollRight,
        onScrollUp: onScrollUp,
        onScrollDown: onScrollDown,
        onIncrease: onIncrease,
        onDecrease: onDecrease,
        onCopy: onCopy,
        onCut: onCut,
        onPaste: onPaste,
        onDismiss: onDismiss,
        onMoveCursorForwardByCharacter: onMoveCursorForwardByCharacter,
        onMoveCursorBackwardByCharacter: onMoveCursorBackwardByCharacter,
        onSetSelection: onSetSelection,
        onSetText: onSetText,
        onDidGainAccessibilityFocus: onDidGainAccessibilityFocus,
        onDidLoseAccessibilityFocus: onDidLoseAccessibilityFocus,
        customSemanticsActions: customSemanticsActions,
      );
}
